{"ast":null,"code":"import _slicedToArray from \"/Users/aziz/Documents/Explore-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aziz/Documents/Explore-hooks/src/Components/Counter-with-useReducer.js\";\nimport React, { useReducer, useEffect } from 'react';\nconst initialState = {\n  count: 0\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"increment\":\n      return {\n        count: state.count + 1\n      };\n      break;\n\n    case \"decrement\":\n      return {\n        count: state.count > 0 ? state.count - 1 : 0\n      };\n      break;\n\n    case \"reset\":\n      return {\n        count: 0\n      };\n      break;\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction CounterReducer() {\n  const _useReducer = useReducer(reducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  useEffect(() => {\n    document.title = `You clicked useReducer ${state.count} times`;\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Counter with Hooks using useReducer \"), \"counter result : \", state.count, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"counterBtn\",\n    onClick: () => dispatch({\n      type: \"reset\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Reset\"), React.createElement(\"button\", {\n    className: \"counterBtn\",\n    onClick: () => dispatch({\n      type: \"decrement\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"-\"), React.createElement(\"button\", {\n    className: \"counterBtn\",\n    onClick: () => dispatch({\n      type: \"increment\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"+\")));\n}\n\nexport default CounterReducer;","map":{"version":3,"sources":["/Users/aziz/Documents/Explore-hooks/src/Components/Counter-with-useReducer.js"],"names":["React","useReducer","useEffect","initialState","count","reducer","state","action","type","Error","CounterReducer","dispatch","document","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAG;AAAV,CAArB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO;AAACJ,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAtB,OAAP;AACA;;AACF,SAAK,WAAL;AACE,aAAO;AAACA,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc,CAAd,GAAkBE,KAAK,CAACF,KAAN,GAAc,CAAhC,GAAoC;AAA5C,OAAP;AACA;;AACF,SAAK,OAAL;AACE,aAAO;AAACA,QAAAA,KAAK,EAAG;AAAT,OAAP;AACA;;AACF;AACE,YAAM,IAAIK,KAAJ,EAAN;AAXJ;AAaD;;AAED,SAASC,cAAT,GAA0B;AAAA,sBACET,UAAU,CAACI,OAAD,EAAUF,YAAV,CADZ;AAAA;AAAA,QACjBG,KADiB;AAAA,QACVK,QADU;;AAGxBT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACC,KAAT,GAAkB,0BAAyBP,KAAK,CAACF,KAAM,QAAvD;AACD,GAFQ,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,uBAEoBE,KAAK,CAACF,KAF1B,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,OAAO,EAAE,MAAMO,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAGE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,CAHF,CADF;AAWD;;AAED,eAAeE,cAAf","sourcesContent":["import React, { useReducer, useEffect } from 'react';\n\nconst initialState = { count : 0};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"increment\":\n      return {count: state.count + 1};\n      break;\n    case \"decrement\":\n      return {count: state.count > 0 ? state.count - 1 : 0};\n      break;\n    case \"reset\":\n      return {count : 0}\n      break;\n    default:\n      throw new Error();\n  }\n}\n\nfunction CounterReducer() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    document.title = `You clicked useReducer ${state.count} times`;\n  });\n\n  return (\n    <div>\n      <h2>Counter with Hooks using useReducer </h2>\n      counter result : {state.count}\n      <div>\n        <button className=\"counterBtn\" onClick={() => dispatch({type: \"reset\"})}>Reset</button>\n        <button className=\"counterBtn\" onClick={() => dispatch({type: \"decrement\"})}>-</button>\n        <button className=\"counterBtn\" onClick={() => dispatch({type: \"increment\"})}>+</button>\n      </div>\n    </div>\n  )\n}\n\nexport default CounterReducer;\n"]},"metadata":{},"sourceType":"module"}